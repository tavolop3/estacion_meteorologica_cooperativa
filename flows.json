[
    {
        "id": "fa9d2af618bbd4d6",
        "type": "tab",
        "label": "Flujo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "178c2087bd80e284",
        "type": "function",
        "z": "fa9d2af618bbd4d6",
        "name": "formatear datos",
        "func": "let datos = msg.payload;\n\nmsg.payload = [{\n    humidity: datos.humedad,\n    temperature: datos.temperatura,\n},\n{\n    lugar:\"La Plata\",\n    station_id: datos.station_id,\n    lat: parseFloat(datos.ubicacion.lat),\n    lon: parseFloat(datos.ubicacion.lon),\n    localidad: datos.localidad\n}];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 440,
        "wires": [
            [
                "4b9eb268578f9ee5",
                "ab01f47116378f1d"
            ]
        ]
    },
    {
        "id": "ab01f47116378f1d",
        "type": "debug",
        "z": "fa9d2af618bbd4d6",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 320,
        "wires": []
    },
    {
        "id": "4b9eb268578f9ee5",
        "type": "influxdb out",
        "z": "fa9d2af618bbd4d6",
        "influxdb": "a863383983dc261e",
        "name": "persistir",
        "measurement": "datos",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1140,
        "y": 440,
        "wires": []
    },
    {
        "id": "d8cf453ca7ea261e",
        "type": "cbor",
        "z": "fa9d2af618bbd4d6",
        "name": "parsear cbor",
        "property": "payload",
        "x": 770,
        "y": 340,
        "wires": [
            [
                "178c2087bd80e284"
            ]
        ]
    },
    {
        "id": "4b03c88fb2bedcb9",
        "type": "http in",
        "z": "fa9d2af618bbd4d6",
        "name": "Pagina web",
        "url": "/info",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "1ea3a00fb6f16eb5"
            ]
        ]
    },
    {
        "id": "1ea3a00fb6f16eb5",
        "type": "template",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Red Meteorol√≥gica Barrial Cooperativa</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap\" rel=\"stylesheet\">\n</head>\n<body>\n    <header>\n        <div class=\"container\">\n            <h1>Red Meteorol√≥gica Barrial Cooperativa üå¶Ô∏è</h1>\n            <p class=\"subtitle\">Mide el clima de tu barrio en tiempo real y s√© parte de una red ciudadana de datos abiertos.</p>\n        </div>\n    </header>\n\n    <main class=\"container\">\n        <section id=\"descripcion\">\n            <h2>¬øEn qu√© consiste el Proyecto?</h2>\n            <p>Nuestra red es una iniciativa comunitaria para crear un mapa meteorol√≥gico detallado y en tiempo real de nuestro barrio. Utilizamos tecnolog√≠a accesible como el <strong>ESP32</strong> para que cualquier vecino pueda construir su propia estaci√≥n (nodo), medir variables como <strong>temperatura, humedad y presi√≥n</strong>, y compartir los datos de forma autom√°tica con un servidor central. El objetivo es simple: tener datos clim√°ticos precisos, abiertos y generados por nosotros mismos.</p>\n        </section>\n        <section id=\"visualizacion\">\n            <h2>Visualiza los Datos en Vivo üó∫Ô∏è</h2>\n            <p>Explora el mapa interactivo con las mediciones en tiempo real de todas las estaciones de la red en La Plata. ¬°Descubre c√≥mo est√° el clima en cada rinc√≥n del barrio ahora mismo!</p>\n            <a href=\"dashboard.html\" class=\"cta-button\">Ver Datos en Tiempo Real</a>\n        </section>\n        <hr>\n\n        <section id=\"arquitectura\">\n            <h2>¬øC√≥mo Funciona? ‚öôÔ∏è</h2>\n            <p>La arquitectura del sistema es simple y robusta, dise√±ada para ser escalable y f√°cil de mantener. Se compone de dos partes principales: los nodos cliente y el nodo central.</p>\n            <div class=\"cards-container\">\n                <div class=\"card\">\n                    <h3>1. Nodos Cliente (Tu Estaci√≥n)</h3>\n                    <p>Cada estaci√≥n meteorol√≥gica es un \"nodo cliente\". Est√° construida con un microcontrolador <strong>ESP32</strong> y sensores. Su √∫nica tarea es recolectar datos y enviarlos de forma segura a nuestro servidor a trav√©s de Wi-Fi usando el protocolo <strong>MQTT</strong>.</p>\n                </div>\n                <div class=\"card\">\n                    <h3>2. Nodo Central (Nuestro Servidor)</h3>\n                    <p>El servidor recibe y orquesta todos los datos. Un <strong>Broker MQTT</strong> act√∫a como receptor. Luego, <strong>Node-RED</strong> procesa y estandariza la informaci√≥n para almacenarla en la base de datos <strong>InfluxDB</strong>, que est√° optimizada para series temporales. Finalmente, ¬°la magia ocurre!</p>\n                </div>\n                <div class=\"card\">\n                    <h3>3. Visualizaci√≥n (El Dashboard)</h3>\n                    <p><strong>Grafana</strong> se conecta a la base de datos y transforma los n√∫meros en informaci√≥n √∫til. Crea gr√°ficos, mapas de calor y tablas que se muestran en un dashboard p√∫blico. As√≠, todos podemos ver el estado del clima en el barrio de un solo vistazo.</p>\n                </div>\n            </div>\n        </section>\n\n        <hr>\n\n        <section id=\"como-sumarse\">\n            <h2>¬°Quiero Sumarme! ¬øC√≥mo Empiezo?</h2>\n            <p>¬°Excelente! Unirte al proyecto es m√°s f√°cil de lo que crees. Solo necesitas ganas de aprender y algunos componentes electr√≥nicos b√°sicos. Hemos preparado una gu√≠a completa con todo lo que necesitas.</p>\n            <div class=\"pasos\">\n                <div class=\"paso\">\n                    <span class=\"numero\">1</span>\n                    <p><strong>Re√∫ne los componentes:</strong> Necesitar√°s un ESP32, sensores (como el BME280 o DHT22) y algunos cables. En nuestra gu√≠a encontrar√°s una lista detallada con enlaces de compra sugeridos.</p>\n                </div>\n                <div class=\"paso\">\n                    <span class=\"numero\">2</span>\n                    <p><strong>Monta tu estaci√≥n:</strong> Sigue nuestros tutoriales paso a paso para ensamblar el hardware. ¬°No necesitas ser un experto en electr√≥nica!</p>\n                </div>\n                <div class=\"paso\">\n                    <span class=\"numero\">3</span>\n                    <p><strong>Carga el c√≥digo:</strong> Te proporcionamos el c√≥digo listo para cargar en tu ESP32. Solo tendr√°s que configurar tu red Wi-Fi y un identificador √∫nico para tu estaci√≥n.</p>\n                </div>\n                <div class=\"paso\">\n                    <span class=\"numero\">4</span>\n                    <p><strong>¬°Listo!</strong> Una vez encendida, tu estaci√≥n comenzar√° a enviar datos autom√°ticamente. Podr√°s ver tus mediciones en el dashboard general de la red.</p>\n                </div>\n            </div>\n        </section>\n        \n        <hr>\n\n        <section id=\"generar-hash\">\n            <h2>Generador de Hash üîê</h2>\n            <p> Haz clic en el bot√≥n para generar un hash √∫nico (SHA-256). El hash se mostrar√° en pantalla y se enviar√° a nuestra base de datos InfluxDB a trav√©s de Node-RED.</p>\n            <p> Es importante que guardes el valor del hash. Ese valor te sera de utildiad al comunicarte con nuestro servidor. </p>\n            <p> ¬°No te preocupes! Todo lo que deberas de hacer es pegar el valor del hash en la variable CLAVE del archivo config.h que te dimos. </p>\n            <div class=\"hash-container\">\n                <button id=\"btn-generar-hash\" class=\"cta-button\">Generar y Guardar Hash</button>\n                <div id=\"hash-display-container\">\n                    <strong>Hash Generado:</strong>\n                    <code id=\"hash-display\">A√∫n no se ha generado ning√∫n hash.</code>\n                </div>\n            </div>\n        </section>\n        <section id=\"cta\">\n            <p>Toda la documentaci√≥n t√©cnica, el c√≥digo fuente y los tutoriales est√°n disponibles en nuestro repositorio de GitHub.</p>\n            <a href=\"#\" class=\"cta-button\">Ver Gu√≠a y C√≥digo en GitHub</a>\n        </section>\n    </main>\n\n    <footer>\n        <div class=\"container\">\n            <p>&copy; 2025 Red Meteorol√≥gica Cooperativa. Un proyecto de ciencia ciudadana para todos.</p>\n        </div>\n    </footer>\n\n    <script>\n        const generateButton = document.getElementById('btn-generar-hash');\n        const hashDisplay = document.getElementById('hash-display');\n\n        async function generateSHA256(text) {\n            const encoder = new TextEncoder();\n            const data = encoder.encode(text);\n            const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\n            const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n            return hashHex;\n        }\n\n        generateButton.addEventListener('click', async () => {\n            hashDisplay.textContent = 'Generando...';\n            \n            const uniqueString = Date.now().toString() + Math.random().toString();\n\n            const generatedHash = await generateSHA256(uniqueString);\n\n            hashDisplay.textContent = generatedHash;\n\n            try {\n                const response = await fetch('/api/save-hash', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ hash: generatedHash })\n                });\n\n                if (response.ok) {\n                    console.log('Hash enviado y guardado correctamente.');\n                } else {\n                    console.error('Error al guardar el hash. El servidor respondi√≥:', response.statusText);\n                }\n            } catch (error) {\n                console.error('Error de red al intentar enviar el hash:', error);\n            }\n        });\n    </script>\n    </body>\n</html>",
        "output": "str",
        "x": 320,
        "y": 700,
        "wires": [
            [
                "f3ddd96e0e75a71e"
            ]
        ]
    },
    {
        "id": "f3ddd96e0e75a71e",
        "type": "http response",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 700,
        "wires": []
    },
    {
        "id": "1e2ebcedcc0ffe9f",
        "type": "http in",
        "z": "fa9d2af618bbd4d6",
        "name": "Estilos",
        "url": "/style.css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "ca4f0c9d1c665f14"
            ]
        ]
    },
    {
        "id": "0c621c0875175d84",
        "type": "http response",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 760,
        "wires": []
    },
    {
        "id": "72025deca8b58d54",
        "type": "change",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{     \"content-type\": \"text/css\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 760,
        "wires": [
            [
                "0c621c0875175d84"
            ]
        ]
    },
    {
        "id": "ca4f0c9d1c665f14",
        "type": "template",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": ":root {\n    --primary-color: #007BFF;\n    --secondary-color: #343A40;\n    --background-color: #f8f9fa;\n    --text-color: #212529;\n    --card-bg: #ffffff;\n    --border-color: #dee2e6;\n}\n\nbody {\n    font-family: 'Roboto', sans-serif;\n    line-height: 1.6;\n    color: var(--text-color);\n    background-color: var(--background-color);\n    margin: 0;\n    padding: 0;\n}\n\n.container {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 0 20px;\n}\n\nheader {\n    background-color: var(--secondary-color);\n    color: #ffffff;\n    padding: 3rem 0;\n    text-align: center;\n    border-bottom: 5px solid var(--primary-color);\n}\n\nheader h1 {\n    font-size: 2.8rem;\n    font-weight: 700;\n    margin: 0;\n}\n\nheader .subtitle {\n    font-size: 1.2rem;\n    font-weight: 300;\n    margin-top: 0.5rem;\n}\n\nmain {\n    padding: 2rem 0;\n}\n\nsection {\n    padding: 2rem 0;\n}\n\nsection h2 {\n    text-align: center;\n    font-size: 2.2rem;\n    color: var(--secondary-color);\n    margin-bottom: 2rem;\n    position: relative;\n}\n\nhr {\n    border: 0;\n    height: 1px;\n    background: var(--border-color);\n    margin: 1rem 0;\n}\n\n.cards-container {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n    flex-wrap: wrap;\n}\n\n.card {\n    background: var(--card-bg);\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n    padding: 1.8rem;\n    text-align: center;\n    flex-basis: calc(33.333% - 20px);\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\n}\n\n.card h3 {\n    color: var(--primary-color);\n    font-size: 1.4rem;\n    margin-top: 0;\n}\n\n.pasos {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.paso {\n    display: flex;\n    align-items: center;\n    background: var(--card-bg);\n    padding: 1rem 1.5rem;\n    border-radius: 8px;\n    border-left: 5px solid var(--primary-color);\n}\n\n.paso .numero {\n    font-size: 2rem;\n    font-weight: 700;\n    color: var(--primary-color);\n    margin-right: 1.5rem;\n}\n\n.paso p {\n    margin: 0;\n}\n\n#cta {\n    text-align: center;\n    padding: 3rem 0;\n}\n\n#cta p {\n    font-size: 1.1rem;\n    margin-bottom: 1.5rem;\n}\n\n.cta-button {\n    background-color: var(--primary-color);\n    color: #ffffff;\n    padding: 15px 30px;\n    text-decoration: none;\n    font-size: 1.2rem;\n    font-weight: 700;\n    border-radius: 5px;\n    transition: background-color 0.3s ease, transform 0.2s ease;\n}\n\n.cta-button:hover {\n    background-color: #0056b3;\n    transform: scale(1.05);\n}\n\nfooter {\n    background-color: var(--secondary-color);\n    color: #ccc;\n    text-align: center;\n    padding: 1.5rem 0;\n    margin-top: 2rem;\n}\n\n@media (max-width: 768px) {\n    header h1 {\n        font-size: 2rem;\n    }\n\n    .cards-container {\n        flex-direction: column;\n    }\n    \n    .card {\n        flex-basis: 100%;\n    }\n}\n\n/* Estilos para la nueva secci√≥n de Hash */\n.hash-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1.5rem;\n}\n\n#hash-display-container {\n    background-color: var(--card-bg);\n    border: 1px solid var(--border-color);\n    padding: 1rem;\n    border-radius: 8px;\n    width: 100%;\n    max-width: 600px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n    text-align: left;\n}\n\n#hash-display-container strong {\n    display: block;\n    margin-bottom: 0.5rem;\n    color: var(--secondary-color);\n}\n\n#hash-display {\n    font-family: 'Courier New', Courier, monospace;\n    word-break: break-all;\n    color: var(--primary-color);\n    font-size: 1.1rem;\n}",
        "output": "str",
        "x": 320,
        "y": 760,
        "wires": [
            [
                "72025deca8b58d54"
            ]
        ]
    },
    {
        "id": "f363af2641f6281c",
        "type": "delay",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "pauseType": "timed",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "d8cf453ca7ea261e"
            ]
        ]
    },
    {
        "id": "0251a99c84adb53f",
        "type": "influxdb in",
        "z": "fa9d2af618bbd4d6",
        "influxdb": "a863383983dc261e",
        "name": "hashes",
        "query": "SELECT hash \nFROM hashes",
        "rawOutput": true,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 280,
        "y": 240,
        "wires": [
            [
                "70bb2d95ffec9124",
                "8b148c4b6d9ef50f"
            ]
        ]
    },
    {
        "id": "49608e675d99cd25",
        "type": "inject",
        "z": "fa9d2af618bbd4d6",
        "name": "wakeup query",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "0251a99c84adb53f"
            ]
        ]
    },
    {
        "id": "e74186b71e14e3a0",
        "type": "influxdb out",
        "z": "fa9d2af618bbd4d6",
        "d": true,
        "influxdb": "a863383983dc261e",
        "name": "",
        "measurement": "hashes",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 680,
        "y": 1500,
        "wires": []
    },
    {
        "id": "13c2e9265efc52e3",
        "type": "inject",
        "z": "fa9d2af618bbd4d6",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"hash\": 2}",
        "payloadType": "json",
        "x": 460,
        "y": 1500,
        "wires": [
            [
                "e74186b71e14e3a0"
            ]
        ]
    },
    {
        "id": "70bb2d95ffec9124",
        "type": "function",
        "z": "fa9d2af618bbd4d6",
        "name": "formatear topicos",
        "func": "const series = msg.payload['results'][0].series[0];\nconst columns = series.columns; // [\"time\", \"hash\"]\nconst values = series.values;   // [[\"...\", 1], [\"...\", 1]]\n\n// Encontrar din√°micamente en qu√© posici√≥n est√° la columna 'hash'\nconst hashIndex = columns.indexOf('hash');\nif (hashIndex === -1) {\n    node.error(\"La columna 'hash' no se encontr√≥ en los resultados de InfluxDB.\");\n    return null; // Detiene el flujo si no existe la columna\n}\n\n// Usar un Set para extraer los hashes y eliminar duplicados autom√°ticamente\nconst topicSet = new Set();\nfor (const row of values) {\n    // Extrae el hash usando el √≠ndice que encontramos\n    const hash = row[hashIndex];\n    if (hash !== null && hash !== undefined) {\n        topicSet.add(`barrio/estaciones/${hash}`);\n    }\n}\n\n// Si no se encontraron t√≥picos, detener el flujo\nif (topicSet.size === 0) {\n    node.warn(\"No se encontraron hashes v√°lidos para crear t√≥picos.\");\n    return null;\n}\n\n// Construir el payload final con los t√≥picos √∫nicos\nmsg.topic = Array.from(topicSet) // Convierte el Set a un Array\nmsg.action = \"subscribe\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 340,
        "wires": [
            [
                "74695c79baad5356"
            ]
        ]
    },
    {
        "id": "74695c79baad5356",
        "type": "mqtt in",
        "z": "fa9d2af618bbd4d6",
        "name": "mqtt in dinamico",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "57a306eb47001b96",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 440,
        "y": 340,
        "wires": [
            [
                "f363af2641f6281c"
            ]
        ]
    },
    {
        "id": "a033974cb49c11d3",
        "type": "mqtt out",
        "z": "fa9d2af618bbd4d6",
        "d": true,
        "name": "",
        "topic": "barrio/estaciones/1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "57a306eb47001b96",
        "x": 670,
        "y": 1600,
        "wires": []
    },
    {
        "id": "2bab4c5f3b206d9a",
        "type": "inject",
        "z": "fa9d2af618bbd4d6",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "barrio/estaciones/1",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 1600,
        "wires": [
            [
                "a033974cb49c11d3"
            ]
        ]
    },
    {
        "id": "c193b7c4a05852c1",
        "type": "http in",
        "z": "fa9d2af618bbd4d6",
        "name": "Hash",
        "url": "/api/save-hash",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "0599bdf9e8516950"
            ]
        ]
    },
    {
        "id": "23b8f32bb26f3735",
        "type": "influxdb out",
        "z": "fa9d2af618bbd4d6",
        "influxdb": "a863383983dc261e",
        "name": "guardar hash",
        "measurement": "hashes",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 530,
        "y": 820,
        "wires": []
    },
    {
        "id": "1dec1ed13d5f2e95",
        "type": "http response",
        "z": "fa9d2af618bbd4d6",
        "name": "Respuesta OK",
        "statusCode": "200",
        "headers": {},
        "x": 540,
        "y": 860,
        "wires": []
    },
    {
        "id": "0599bdf9e8516950",
        "type": "json",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 290,
        "y": 820,
        "wires": [
            [
                "23b8f32bb26f3735",
                "1dec1ed13d5f2e95"
            ]
        ]
    },
    {
        "id": "8b148c4b6d9ef50f",
        "type": "debug",
        "z": "fa9d2af618bbd4d6",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 200,
        "wires": []
    },
    {
        "id": "3bab1874434598d6",
        "type": "http in",
        "z": "fa9d2af618bbd4d6",
        "name": "Mostrar datos",
        "url": "/dashboard.html",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "ab8ab3ab55e108c6"
            ]
        ]
    },
    {
        "id": "ab8ab3ab55e108c6",
        "type": "template",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Dashboard de Datos - Red Meteorol√≥gica</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <link rel=\"stylesheet\" href=\"dashboard.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap\" rel=\"stylesheet\">\n</head>\n<body>\n    <header>\n        <div class=\"container\">\n            <h1>Mapa de Datos en Tiempo Real üìç</h1>\n            <p class=\"subtitle\">Datos de las estaciones meteorol√≥gicas de La Plata</p>\n        </div>\n    </header>\n\n    <main class=\"container\">\n        <div class=\"dashboard-container\">\n            <iframe \n                src=\"http://localhost:3000/d-solo/b774f9df-aa30-4dc1-954b-e344bfe4a81a/estacion-meteorologica?orgId=1&from=1752596037118&to=1752596337118&timezone=browser&panelId=5&__feature.dashboardSceneSolo\" \n                class=\"grafana-iframe\" \n                frameborder=\"0\">\n            </iframe>\n        </div>\n\n        <div class=\"cta-container\">\n            <p>¬øQuieres explorar m√°s a fondo? Accede al dashboard completo para ver gr√°ficos hist√≥ricos, tablas de datos y m√°s.</p>\n            <a href=\"http://localhost:3000/goto/25Hc4dUNR?orgId=1\" target=\"_blank\" class=\"cta-button\">Ir al Dashboard Completo de Grafana</a>\n        </div>\n    </main>\n\n    <footer>\n        <div class=\"container\">\n            <a href=\"/info\" class=\"back-link\">‚Üê Volver a la p√°gina principal</a>\n            <p>&copy; 2025 Red Meteorol√≥gica Cooperativa. Un proyecto de ciencia ciudadana para todos.</p>\n        </div>\n    </footer>\n</body>\n</html>",
        "output": "str",
        "x": 320,
        "y": 940,
        "wires": [
            [
                "3fe979eeb64f3ca9"
            ]
        ]
    },
    {
        "id": "3fe979eeb64f3ca9",
        "type": "http response",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 940,
        "wires": []
    },
    {
        "id": "12f5642c12a2aa5a",
        "type": "http in",
        "z": "fa9d2af618bbd4d6",
        "name": "Estilos datos",
        "url": "/dashboard.css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1000,
        "wires": [
            [
                "7ee11926d4e95ed2"
            ]
        ]
    },
    {
        "id": "f3fcc723c7165c5b",
        "type": "http response",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 1000,
        "wires": []
    },
    {
        "id": "14d4ee798d5e0057",
        "type": "change",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{     \"content-type\": \"text/css\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1000,
        "wires": [
            [
                "f3fcc723c7165c5b"
            ]
        ]
    },
    {
        "id": "7ee11926d4e95ed2",
        "type": "template",
        "z": "fa9d2af618bbd4d6",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": ".dashboard-container {\n    position: relative; \n    width: 100%;\n    height: 0;         \n    padding-top: 56.25%; \n\n    margin-top: 2rem;\n    border-radius: 8px;\n    overflow: hidden; \n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n}\n\n.grafana-iframe {\n    position: absolute; \n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: none;\n}\n\n.cta-container {\n    text-align: center;\n    padding: 3rem 0;\n}\n\n.cta-container p {\n    font-size: 1.1rem;\n    margin-bottom: 1.5rem;\n}\n\nfooter .back-link {\n    display: block;\n    color: #fff;\n    text-decoration: none;\n    margin-bottom: 1rem;\n    transition: color 0.3s ease;\n}\n\nfooter .back-link:hover {\n    color: var(--primary-color);\n}\n\n",
        "output": "str",
        "x": 320,
        "y": 1000,
        "wires": [
            [
                "14d4ee798d5e0057"
            ]
        ]
    },
    {
        "id": "a863383983dc261e",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": 8086,
        "protocol": "http",
        "database": "mediciones",
        "name": "influxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "57a306eb47001b96",
        "type": "mqtt-broker",
        "name": "MQTT local",
        "broker": "mqtt",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]